<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.agroup.store.mapper.DesiredGoodsMapper">

    <insert id="insertDesiredGoods" parameterType="com.agroup.store.domain.DesiredGoods" useGeneratedKeys="true" keyProperty="id">
        insert into desiredgoods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="description != null">
                `description`,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="img != null">
                img,
            </if>
            <if test="accountId != null">
                account_id,
            </if>
            <if test="price != null">
                price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="categoryId != null">
                #{categoryId},
            </if>
            <if test="img != null">
                #{img},
            </if>
            <if test="accountId != null">
                #{accountId},
            </if>
            <if test="price != null">
                #{price},
            </if>
        </trim>
    </insert>


    <resultMap id="desiredGoodsMap" type="com.agroup.store.domain.DesiredGoods">
        <id column="account_id"></id>
        <result column="id" property="id"></result>
        <result column="name" property="name"></result>
        <result column="description" property="description"></result>
        <result column="img" property="img"></result>
        <result column="category_id" property="categoryId"></result>
        <result column="account_id" property="accountId"></result>
        <result column="price" property="price"></result>
    </resultMap>

    <select id="selectDesiredGoodsByAccountId" parameterType="java.lang.Integer" resultMap="desiredGoodsMap">
        select * from desiredgoods where account_id= #{accountId}
    </select>

    <insert id="insertDesiredGoodsImg" parameterType="com.agroup.store.domain.Goodsimage">
        insert into desiredgoodsimage (desiredgoodsid, img)
        values (#{goodsid,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR})
    </insert>

    <select id="getDesiredGoodsImgs" parameterType="java.lang.Integer" resultType="java.lang.String">
        select img
        from desiredgoodsimage
        where desiredgoodsid=#{desiredgoodsid, jdbcType=INTEGER}
    </select>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="desiredGoodsMap">
        select *
        from desiredgoods
        where id = #{id, jdbcType=INTEGER}
    </select>

    <select id="selectList" parameterType="com.agroup.store.req.DesiredGoodsMainListReq" resultMap="desiredGoodsMap">
        select *
        from desiredgoods
        <trim prefix="where" prefixOverrides="and |or">
            <if test="categoryId != 1">
                and category_id = #{categoryId, jdbcType=INTEGER}
            </if>
            <if test="keyword != null">
                and (name like concat('%', #{keyword, jdbcType=VARCHAR}, '%') or description like concat('%', #{keyword, jdbcType=VARCHAR}, '%'))
            </if>
                and account_id != #{accountId, jdbcType=INTEGER}
        </trim>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from desiredgoods
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <select id="getAccountIdByDesiredGoodsId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select account_id from desiredgoods where id = #{desiredGoodsId}
    </select>

    <update id="updateTradingInf">
        update supplyrecord
        set effective = "false" ,
            tradingDate = #{tradingDate},
            tradinglocation = #{tradingLocation},
            payment = #{payment}
        where accountid = #{sellerId}
          and desiredgoodsid = #{desiredGoodsId}
    </update>

    <update id="updateTradingEffectToFalse">
        update supplyrecord
        set effective = "false" ,
            tradingDate = null,
            tradinglocation = null,
            payment = null
        where accountid = #{sellerId}
          and desiredgoodsid = #{desiredGoodsId}
    </update>

</mapper>